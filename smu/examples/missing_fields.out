When you process the *complete* database, you have to be careful to check what data is available
We will examine conformers 35004068 and 35553043
If you ask for the optimized_geometry_energy for both you get sensible values
35004068 -340.597698
35553043 -340.576816

But if you ask for zpe_unscaled, the second gives a 0
35004068 75.66
35553043 0.0

And if you ask for enthalpy_of_formation_298k_atomic_b6, both give 0
35004068 0.0
35553043 0.0

These are cases of missing values.
If you request a value which is actually missing, you will silently get a default value (0.0 for floats)
You can check whether a Conformer has a value with the HasField method
Calling HasField for optimized_geometry_energy:
35004068 True
35553043 True
Calling HasField for zpe_unscaled:
35004068 True
35553043 False
Calling HasField for enthalpy_of_formation_298k_atomic_b6:
35004068 False
35553043 False

The one field that is different is normal_modes
Since normal_modes is a list of composite values, missing just means the list is length 0
You cannot call HasField on normal_modes
The length of normal_modes in our two conformers are:
35004068 42
35553043 0

The properties.errors.status variable can shed some light on why fields are missing
However, the exact rules of what fields are missing when are complex
Therefore, whenever accessing properties fields in the complete database, you should check HasField first
